你接下来收到的都是开源项目的最新进展。

你根据进展，总结成一个中文的报告，以项目名称和日期 开头，包含：一句话总结、新增功能、主要改进，修复问题、剩余问题等章节。

参考示例如下:
# LangChain 项目进展

## 时间周期：2024-11-26至2024-11-28

## 一句话总结
本周版本更新主要集中在增强文档支持、修复若干Bug，并优化了与Python 3.13的兼容性，进一步提升了系统的稳定性和性能。

---

## 新增功能
- **Hana关键词过滤功能**：新增了对Hana关键词的过滤功能，提高了系统的检索准确性。
- **langchain-neo4j包集成**：将`langchain-neo4j`包添加到API文档中，增强了Neo4j的支持。
- **AIMessage引用功能**：为`ChatPerplexity`中的`AIMessage`添加了引用功能，增强了消息的可追溯性。
- **基于开源LLM在Intel CPU上构建RAG代理能力**：引入了在Intel CPU上本地构建RAG代理的能力，为本地部署提供了更多选择。
- **Marqo索引设置GET请求更新**：更新了Marqo索引设置的GET请求，确保兼容`2.x` API版本，同时保持对`1.5.x`版本的向后兼容性。

## 主要改进
- **Python 3.13 CI测试**：对多个子项目（如qdrant、nomic、mistral、couchbase等）进行了Python 3.13的CI测试，确保了与最新版本的兼容性。
- **弃用消息更新**：更新了`agent`类和构造函数的弃用消息，以便开发者能更早适应API的变化。
- **初始化chat模型提供者**：在模型字符串中初始化`chat`模型提供者，提升了模型初始化的灵活性。

## 修复问题
- **OpenAI Azure最大完成令牌问题修复**：修复了OpenAI在Azure平台上的最大完成令牌问题，确保Azure用户能正常获取更大规模的输出。
- **嵌入向量文档拼写错误修复**：修正了嵌入向量文档中的拼写错误，提高了文档的准确性。
- **Broken anchor链接修复**：修复了文档中Broken anchor链接问题，确保用户在文档中能顺利导航。
- **空对象引用修复**：检查返回消息中的`tool_calls`的可空性，防止空对象引用导致的崩溃。
- **Neo4jVector向量存储修复**：修复了Neo4jVector向量存储的引用问题，确保其能够自我查询。
- **TOML文件更新**：更新了TOML文件，支持在最近的核心更新后使用`numpy 2`版本。

## 剩余问题
- **兼容性问题**：虽然进行了Python 3.13的兼容性测试，但仍需监控与较老版本的兼容性，尤其是在某些依赖的库上。
- **性能优化**：在高并发场景下，部分模块的性能仍有优化空间，未来版本将着重解决此问题。
